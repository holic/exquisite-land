/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LandGranter, LandGranterInterface } from "../LandGranter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "exquisiteLandAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "InviteCoinCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "InviteCoinUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "grant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000f3738038062000f3783398181016040528101906100349190610178565b61005061004561009760201b60201c565b61009f60201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101ea565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050610172816101d3565b92915050565b60006020828403121561018a57600080fd5b600061019884828501610163565b91505092915050565b60006101ac826101b3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101dc816101a1565b81146101e757600080fd5b50565b610d3d80620001fa6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063150b7a021461005c578063715018a61461008c578063887d7c3e146100965780638da5cb5b146100b2578063f2fde38b146100d0575b600080fd5b6100766004803603810190610071919061081f565b6100ec565b60405161008391906109e1565b60405180910390f35b61009461024f565b005b6100b060048036038101906100ab919061089a565b6102d7565b005b6100ba610539565b6040516100c7919061098f565b60405180910390f35b6100ea60048036038101906100e591906107cd565b610562565b005b60003073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016101609190610a7c565b60206040518083038186803b15801561017857600080fd5b505afa15801561018c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b091906107f6565b73ffffffffffffffffffffffffffffffffffffffff1614610206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fd906109fc565b60405180910390fd5b7f387c7c961b10d8ca6937855e244c1d13aaea6be9eadfab2d4c810480dcb178b9836040516102359190610a7c565b60405180910390a163150b7a0260e01b9050949350505050565b61025761065a565b73ffffffffffffffffffffffffffffffffffffffff16610275610539565b73ffffffffffffffffffffffffffffffffffffffff16146102cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c290610a5c565b60405180910390fd5b6102d56000610662565b565b6102df61065a565b73ffffffffffffffffffffffffffffffffffffffff166102fd610539565b73ffffffffffffffffffffffffffffffffffffffff1614610353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034a90610a5c565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016103c59190610a7c565b60206040518083038186803b1580156103dd57600080fd5b505afa1580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041591906107f6565b73ffffffffffffffffffffffffffffffffffffffff161461046b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290610a3c565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3083856040518463ffffffff1660e01b81526004016104ca939291906109aa565b600060405180830381600087803b1580156104e457600080fd5b505af11580156104f8573d6000803e3d6000fd5b505050507f433eaa9a9be3787353129421fe79f5c42b4c48e439bde50524bca1b1e14ce5ad828260405161052d929190610a97565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61056a61065a565b73ffffffffffffffffffffffffffffffffffffffff16610588610539565b73ffffffffffffffffffffffffffffffffffffffff16146105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590610a5c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561064e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064590610a1c565b60405180910390fd5b61065781610662565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061073961073484610ae5565b610ac0565b90508281526020810184848401111561075157600080fd5b61075c848285610b8f565b509392505050565b60008135905061077381610cd9565b92915050565b60008151905061078881610cd9565b92915050565b600082601f83011261079f57600080fd5b81356107af848260208601610726565b91505092915050565b6000813590506107c781610cf0565b92915050565b6000602082840312156107df57600080fd5b60006107ed84828501610764565b91505092915050565b60006020828403121561080857600080fd5b600061081684828501610779565b91505092915050565b6000806000806080858703121561083557600080fd5b600061084387828801610764565b945050602061085487828801610764565b9350506040610865878288016107b8565b925050606085013567ffffffffffffffff81111561088257600080fd5b61088e8782880161078e565b91505092959194509250565b600080604083850312156108ad57600080fd5b60006108bb858286016107b8565b92505060206108cc85828601610764565b9150509250929050565b6108df81610b27565b82525050565b6108ee81610b39565b82525050565b6000610901601283610b16565b915061090c82610c0f565b602082019050919050565b6000610924602683610b16565b915061092f82610c38565b604082019050919050565b6000610947601883610b16565b915061095282610c87565b602082019050919050565b600061096a602083610b16565b915061097582610cb0565b602082019050919050565b61098981610b85565b82525050565b60006020820190506109a460008301846108d6565b92915050565b60006060820190506109bf60008301866108d6565b6109cc60208301856108d6565b6109d96040830184610980565b949350505050565b60006020820190506109f660008301846108e5565b92915050565b60006020820190508181036000830152610a15816108f4565b9050919050565b60006020820190508181036000830152610a3581610917565b9050919050565b60006020820190508181036000830152610a558161093a565b9050919050565b60006020820190508181036000830152610a758161095d565b9050919050565b6000602082019050610a916000830184610980565b92915050565b6000604082019050610aac6000830185610980565b610ab960208301846108d6565b9392505050565b6000610aca610adb565b9050610ad68282610b9e565b919050565b6000604051905090565b600067ffffffffffffffff821115610b0057610aff610bcf565b5b610b0982610bfe565b9050602081019050919050565b600082825260208201905092915050565b6000610b3282610b65565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610ba782610bfe565b810181811067ffffffffffffffff82111715610bc657610bc5610bcf565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4e6f74206f776e6572206f6620746f6b656e0000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4920646f6e27742068617665207468697320746f6b656e2e0000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610ce281610b27565b8114610ced57600080fd5b50565b610cf981610b85565b8114610d0457600080fd5b5056fea2646970667358221220548599be0bd4ec8b58b2379090266abd79c3e7c0792818db71b59350bad9247c64736f6c63430008040033";

export class LandGranter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    exquisiteLandAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LandGranter> {
    return super.deploy(
      exquisiteLandAddress,
      overrides || {}
    ) as Promise<LandGranter>;
  }
  getDeployTransaction(
    exquisiteLandAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(exquisiteLandAddress, overrides || {});
  }
  attach(address: string): LandGranter {
    return super.attach(address) as LandGranter;
  }
  connect(signer: Signer): LandGranter__factory {
    return super.connect(signer) as LandGranter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LandGranterInterface {
    return new utils.Interface(_abi) as LandGranterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LandGranter {
    return new Contract(address, _abi, signerOrProvider) as LandGranter;
  }
}
