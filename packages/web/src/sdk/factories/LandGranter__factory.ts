/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LandGranter, LandGranterInterface } from "../LandGranter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "exquisiteLandAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "InviteCoinCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "InviteCoinUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "coinCreator",
        type: "address",
      },
    ],
    name: "grant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200106f3803806200106f8339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b610e5880620002176000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063150b7a021461005c5780631f0ec0e81461008c578063715018a6146100a85780638da5cb5b146100b2578063f2fde38b146100d0575b600080fd5b610076600480360381019061007191906109a4565b6100ec565b6040516100839190610a62565b60405180910390f35b6100a660048036038101906100a19190610a7d565b61024f565b005b6100b0610541565b005b6100ba6105c9565b6040516100c79190610adf565b60405180910390f35b6100ea60048036038101906100e59190610afa565b6105f2565b005b60003073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016101609190610b36565b60206040518083038186803b15801561017857600080fd5b505afa15801561018c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b09190610b66565b73ffffffffffffffffffffffffffffffffffffffff1614610206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fd90610bf0565b60405180910390fd5b7f387c7c961b10d8ca6937855e244c1d13aaea6be9eadfab2d4c810480dcb178b9836040516102359190610b36565b60405180910390a163150b7a0260e01b9050949350505050565b6102576106ea565b73ffffffffffffffffffffffffffffffffffffffff166102756105c9565b73ffffffffffffffffffffffffffffffffffffffff16146102cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c290610c5c565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161033d9190610b36565b60206040518083038186803b15801561035557600080fd5b505afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610b66565b73ffffffffffffffffffffffffffffffffffffffff16146103e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103da90610cc8565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3084866040518463ffffffff1660e01b815260040161044293929190610ce8565b600060405180830381600087803b15801561045c57600080fd5b505af1158015610470573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017ad90584836040518363ffffffff1660e01b81526004016104d1929190610d3e565b600060405180830381600087803b1580156104eb57600080fd5b505af11580156104ff573d6000803e3d6000fd5b505050507f433eaa9a9be3787353129421fe79f5c42b4c48e439bde50524bca1b1e14ce5ad8383604051610534929190610d67565b60405180910390a1505050565b6105496106ea565b73ffffffffffffffffffffffffffffffffffffffff166105676105c9565b73ffffffffffffffffffffffffffffffffffffffff16146105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490610c5c565b60405180910390fd5b6105c760006106f2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105fa6106ea565b73ffffffffffffffffffffffffffffffffffffffff166106186105c9565b73ffffffffffffffffffffffffffffffffffffffff161461066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590610c5c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d590610e02565b60405180910390fd5b6106e7816106f2565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f5826107ca565b9050919050565b610805816107ea565b811461081057600080fd5b50565b600081359050610822816107fc565b92915050565b6000819050919050565b61083b81610828565b811461084657600080fd5b50565b60008135905061085881610832565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108b182610868565b810181811067ffffffffffffffff821117156108d0576108cf610879565b5b80604052505050565b60006108e36107b6565b90506108ef82826108a8565b919050565b600067ffffffffffffffff82111561090f5761090e610879565b5b61091882610868565b9050602081019050919050565b82818337600083830152505050565b6000610947610942846108f4565b6108d9565b90508281526020810184848401111561096357610962610863565b5b61096e848285610925565b509392505050565b600082601f83011261098b5761098a61085e565b5b813561099b848260208601610934565b91505092915050565b600080600080608085870312156109be576109bd6107c0565b5b60006109cc87828801610813565b94505060206109dd87828801610813565b93505060406109ee87828801610849565b925050606085013567ffffffffffffffff811115610a0f57610a0e6107c5565b5b610a1b87828801610976565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a5c81610a27565b82525050565b6000602082019050610a776000830184610a53565b92915050565b600080600060608486031215610a9657610a956107c0565b5b6000610aa486828701610849565b9350506020610ab586828701610813565b9250506040610ac686828701610813565b9150509250925092565b610ad9816107ea565b82525050565b6000602082019050610af46000830184610ad0565b92915050565b600060208284031215610b1057610b0f6107c0565b5b6000610b1e84828501610813565b91505092915050565b610b3081610828565b82525050565b6000602082019050610b4b6000830184610b27565b92915050565b600081519050610b60816107fc565b92915050565b600060208284031215610b7c57610b7b6107c0565b5b6000610b8a84828501610b51565b91505092915050565b600082825260208201905092915050565b7f4e6f74206f776e6572206f6620746f6b656e0000000000000000000000000000600082015250565b6000610bda601283610b93565b9150610be582610ba4565b602082019050919050565b60006020820190508181036000830152610c0981610bcd565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c46602083610b93565b9150610c5182610c10565b602082019050919050565b60006020820190508181036000830152610c7581610c39565b9050919050565b7f4920646f6e27742068617665207468697320746f6b656e2e0000000000000000600082015250565b6000610cb2601883610b93565b9150610cbd82610c7c565b602082019050919050565b60006020820190508181036000830152610ce181610ca5565b9050919050565b6000606082019050610cfd6000830186610ad0565b610d0a6020830185610ad0565b610d176040830184610b27565b949350505050565b600063ffffffff82169050919050565b610d3881610d1f565b82525050565b6000604082019050610d536000830185610d2f565b610d606020830184610ad0565b9392505050565b6000604082019050610d7c6000830185610b27565b610d896020830184610ad0565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610dec602683610b93565b9150610df782610d90565b604082019050919050565b60006020820190508181036000830152610e1b81610ddf565b905091905056fea26469706673582212202068f37de36ea33b0d33090b582706fe665d42dfc48dc8f718b58f7736d59f9d64736f6c63430008090033";

export class LandGranter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    exquisiteLandAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LandGranter> {
    return super.deploy(
      exquisiteLandAddress,
      overrides || {}
    ) as Promise<LandGranter>;
  }
  getDeployTransaction(
    exquisiteLandAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(exquisiteLandAddress, overrides || {});
  }
  attach(address: string): LandGranter {
    return super.attach(address) as LandGranter;
  }
  connect(signer: Signer): LandGranter__factory {
    return super.connect(signer) as LandGranter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LandGranterInterface {
    return new utils.Interface(_abi) as LandGranterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LandGranter {
    return new Contract(address, _abi, signerOrProvider) as LandGranter;
  }
}
