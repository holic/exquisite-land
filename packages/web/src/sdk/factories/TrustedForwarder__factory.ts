/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TrustedForwarder,
  TrustedForwarderInterface,
} from "../TrustedForwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TrustedForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TrustedForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040518060400160405280600e81526020017f457871756973697465204c616e640000000000000000000000000000000000008152506040518060400160405280600581526020017f302e302e3100000000000000000000000000000000000000000000000000000081525060008280519060200120905060008280519060200120905060007f91ab3d17e3a50a9d89e63fd30b92be7f5336b03b287bb946787a83a9d62a276690508260c081815250508160e081815250504660a08181525050620000e78184846200010260201b60201c565b608081815250508061010081815250505050505050620001e9565b6000838383306040516020016200011d94939291906200015e565b6040516020818303038152906040528051906020012090509392505050565b6200014781620001ab565b82525050565b6200015881620001bf565b82525050565b60006080820190506200017560008301876200014d565b6200018460208301866200014d565b6200019360408301856200014d565b620001a260608301846200013c565b95945050505050565b6000620001b882620001c9565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60805160a05160c05160e051610100516114f56200022e60003960006105510152600061059301526000610572015260006104fe0152600061052601526114f56000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610076578063bf5d3bdb146100a7575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610bd1565b6100e4565b60405161006d91906110b9565b60405180910390f35b610090600480360381019061008b9190610bfa565b61012c565b60405161009e929190610ef0565b60405180910390f35b3480156100b357600080fd5b506100ce60048036038101906100c99190610bfa565b610304565b6040516100db9190610ed5565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000606061013b858585610304565b61017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017190611039565b60405180910390fd5b6001856080013561018b919061116e565b6000808760000160208101906101a19190610bd1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808660200160208101906101f59190610bd1565b73ffffffffffffffffffffffffffffffffffffffff1687606001358860400135898060a0019061022591906110d4565b8b60000160208101906102389190610bd1565b60405160200161024a93929190610e5d565b6040516020818303038152906040526040516102669190610e87565b600060405180830381858888f193505050503d80600081146102a4576040519150601f19603f3d011682016040523d82523d6000602084013e6102a9565b606091505b5091509150603f87606001356102bf91906111c4565b5a116102f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b8181935093505050935093915050565b60008061040d84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506103ff7fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e488860000160208101906103869190610bd1565b8960200160208101906103999190610bd1565b8a604001358b606001358c608001358d8060a001906103b891906110d4565b6040516103c6929190610e44565b60405180910390206040516020016103e49796959493929190610f20565b604051602081830303815290604052805190602001206104b9565b6104d390919063ffffffff16565b9050846080013560008087600001602081019061042a9190610bd1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541480156104af57508460000160208101906104809190610bd1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9150509392505050565b60006104cc6104c66104fa565b836105bd565b9050919050565b60008060006104e285856105f0565b915091506104ef81610673565b819250505092915050565b60007f000000000000000000000000000000000000000000000000000000000000000046141561054c577f000000000000000000000000000000000000000000000000000000000000000090506105ba565b6105b77f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006109c4565b90505b90565b600082826040516020016105d2929190610e9e565b60405160208183030381529060405280519060200120905092915050565b6000806041835114156106325760008060006020860151925060408601519150606086015160001a9050610626878285856109fc565b9450945050505061066c565b604083511415610663576000806020850151915060408501519050610658868383610b09565b93509350505061066c565b60006002915091505b9250929050565b600060048111156106ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156106e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156106f1576109c1565b6001600481111561072b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610764577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156107a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079c90611019565b60405180910390fd5b600260048111156107df577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610818577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085090611059565b60405180910390fd5b60036004811115610893577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156108cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090490611079565b60405180910390fd5b600480811115610946577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600481111561097f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790611099565b60405180910390fd5b5b50565b6000838383306040516020016109dd9493929190610f8f565b6040516020818303038152906040528051906020012090509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115610a37576000600391509150610b00565b601b8560ff1614158015610a4f5750601c8560ff1614155b15610a61576000600491509150610b00565b600060018787878760405160008152602001604052604051610a869493929190610fd4565b6020604051602081039080840390855afa158015610aa8573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610af757600060019250925050610b00565b80600092509250505b94509492505050565b6000806000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85169150601b8560ff1c019050610b49878288856109fc565b935093505050935093915050565b600081359050610b66816114a8565b92915050565b60008083601f840112610b7e57600080fd5b8235905067ffffffffffffffff811115610b9757600080fd5b602083019150836001820283011115610baf57600080fd5b9250929050565b600060c08284031215610bc857600080fd5b81905092915050565b600060208284031215610be357600080fd5b6000610bf184828501610b57565b91505092915050565b600080600060408486031215610c0f57600080fd5b600084013567ffffffffffffffff811115610c2957600080fd5b610c3586828701610bb6565b935050602084013567ffffffffffffffff811115610c5257600080fd5b610c5e86828701610b6c565b92509250509250925092565b610c73816111f5565b82525050565b610c8a610c85826111f5565b611296565b82525050565b610c9981611207565b82525050565b610ca881611213565b82525050565b610cbf610cba82611213565b6112a8565b82525050565b6000610cd18385611147565b9350610cde838584611254565b82840190509392505050565b6000610cf58261112b565b610cff8185611136565b9350610d0f818560208601611263565b610d1881611322565b840191505092915050565b6000610d2e8261112b565b610d388185611147565b9350610d48818560208601611263565b80840191505092915050565b6000610d61601883611152565b9150610d6c82611340565b602082019050919050565b6000610d84603283611152565b9150610d8f82611369565b604082019050919050565b6000610da7601f83611152565b9150610db2826113b8565b602082019050919050565b6000610dca600283611163565b9150610dd5826113e1565b600282019050919050565b6000610ded602283611152565b9150610df88261140a565b604082019050919050565b6000610e10602283611152565b9150610e1b82611459565b604082019050919050565b610e2f8161123d565b82525050565b610e3e81611247565b82525050565b6000610e51828486610cc5565b91508190509392505050565b6000610e6a828587610cc5565b9150610e768284610c79565b601482019150819050949350505050565b6000610e938284610d23565b915081905092915050565b6000610ea982610dbd565b9150610eb58285610cae565b602082019150610ec58284610cae565b6020820191508190509392505050565b6000602082019050610eea6000830184610c90565b92915050565b6000604082019050610f056000830185610c90565b8181036020830152610f178184610cea565b90509392505050565b600060e082019050610f35600083018a610c9f565b610f426020830189610c6a565b610f4f6040830188610c6a565b610f5c6060830187610e26565b610f696080830186610e26565b610f7660a0830185610e26565b610f8360c0830184610c9f565b98975050505050505050565b6000608082019050610fa46000830187610c9f565b610fb16020830186610c9f565b610fbe6040830185610c9f565b610fcb6060830184610c6a565b95945050505050565b6000608082019050610fe96000830187610c9f565b610ff66020830186610e35565b6110036040830185610c9f565b6110106060830184610c9f565b95945050505050565b6000602082019050818103600083015261103281610d54565b9050919050565b6000602082019050818103600083015261105281610d77565b9050919050565b6000602082019050818103600083015261107281610d9a565b9050919050565b6000602082019050818103600083015261109281610de0565b9050919050565b600060208201905081810360008301526110b281610e03565b9050919050565b60006020820190506110ce6000830184610e26565b92915050565b600080833560016020038436030381126110ed57600080fd5b80840192508235915067ffffffffffffffff82111561110b57600080fd5b60208301925060018202360383131561112357600080fd5b509250929050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006111798261123d565b91506111848361123d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111b9576111b86112c4565b5b828201905092915050565b60006111cf8261123d565b91506111da8361123d565b9250826111ea576111e96112f3565b5b828204905092915050565b60006112008261121d565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015611281578082015181840152602081019050611266565b83811115611290576000848401525b50505050565b60006112a1826112b2565b9050919050565b6000819050919050565b60006112bd82611333565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b7f4d696e696d616c466f727761726465723a207369676e617475726520646f657360008201527f206e6f74206d6174636820726571756573740000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6114b1816111f5565b81146114bc57600080fd5b5056fea2646970667358221220f35bc9d047204a29ea349384962bd225b6885c7ea02dc2a91d51792b1ffc439664736f6c63430008040033";

export class TrustedForwarder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TrustedForwarder> {
    return super.deploy(overrides || {}) as Promise<TrustedForwarder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TrustedForwarder {
    return super.attach(address) as TrustedForwarder;
  }
  connect(signer: Signer): TrustedForwarder__factory {
    return super.connect(signer) as TrustedForwarder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrustedForwarderInterface {
    return new utils.Interface(_abi) as TrustedForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TrustedForwarder {
    return new Contract(address, _abi, signerOrProvider) as TrustedForwarder;
  }
}
